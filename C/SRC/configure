#!/usr/bin/env bash
#***************************** :encoding=UTF-8: ******************************#
#                                                                             #
#  Filename:	    configure						      #
#                                                                             #
#  Description:     Prepare the environment for making SysToolsLib C tools    #
#                                                                             #
#  Notes:	    Verifies if MsvcLibX' debugm.h is accessible, and if not  #
#                   tries to make it accessible.                              #
#                                                                             #
#  History:                                                                   #
#    2015-12-16 JFL Created this script.                                      #
#    2016-01-06 JFL Automatically create a symbolic link to debugm.h if poss. #
#    2016-01-08 JFL Actually copy the file instead of making a link.          #
#    2016-10-12 JFL Search includes in $(STINCLUDE) and $(SYSLIB).	      #
#    2023-01-21 JFL Fixed compatibility with FreeBSD.                         #
#    2024-01-09 JFL Define both NMINCLUDE and STINCLUDE.		      #
#    2024-10-17 JFL Create a config.h file and define macro UNUSED_ARG().     #
#                                                                             #
#         Â© Copyright 2016 Hewlett Packard Enterprise Development LP          #
# Licensed under the Apache 2.0 license - www.apache.org/licenses/LICENSE-2.0 #
#*****************************************************************************#

# Global variables
VERSION="2024-10-17"

VERBOSITY=1			# Verbosity. 0=Quiet 1=Normal 2=Verbose 3=Debug

# Helper routines to test verbosity levels
Normal() {
  [[ $VERBOSITY > 0 ]]
}
Verbose() {
  [[ $VERBOSITY > 1 ]]
}
Debug() {
  [[ $VERBOSITY > 2 ]]
}

# Display a string in normal mode
EchoN() { # $*=echo arguments
  if Normal ; then
    echo "$@"
  fi
}

# Display a string in verbose mode
EchoV() { # $*=echo arguments
  if Verbose ; then
    echo "$@"
  fi
}

# Command line analysis
case "$1" in
  -d|--debug)
    VERBOSITY=$(expr $VERBOSITY + 2)
  ;;
  -h | --help | "-?")
    echo "Prepare the environment for making SysToolsLib C tools"
    echo "Usage: ./configure [-v]"
    exit 0
  ;;
  -q | --quiet)
    VERBOSITY=0
  ;;
  -v | --verbose)
    VERBOSITY=$(expr $VERBOSITY + 1)
  ;;
  -V | --version)
    echo $VERSION
    exit 0
  ;;
esac

# Send cc output to /dev/null, except in debug mode
if Debug ; then
  exec 6>&1
else
  exec 6>/dev/null
fi

# Make sure that MsvcLibX/include is NOT accessible
EchoV "Making sure that MsvcLibX/include is NOT accessible"
cc -o /dev/null -xc - >&6 2>&1 <<EOF
#include <stdio.h> /* This will include MsvcLibX' stdio.h if it's in the same dir as debugm.h, and it'll fail to compile in Linux */
int main(int argc, char *argv[]) {return 0;}
EOF
if [ $? -ne 0 ] ; then
  echo>&2 Error: You must not put MsvcLibX/include in your C_INCLUDE_PATH. Copy debugm.h alone to another directory and export that one.
  exit 1
fi
EchoV "OK"

# Make sure that the NMaker include directory is accessible
EchoV "Making sure that the NMaker include directory is accessible"
CPATH=$NMINCLUDE cc -o /dev/null -xc - >&6 2>&1 <<EOF
#include "debugm.h"
int main(int argc, char *argv[]) {return 0;}
EOF
if [ $? -ne 0 ] ; then # It's not accessible
  if [ -r ../../NMaker/include/debugm.h ] ; then
    NMINCLUDE=$(pushd ../include >/dev/null; pwd; popd >/dev/null)
  else
    >&2 echo "Error: Please set NMINCLUDE with the pathname of NMaker include directory"
    exit 1
  fi
fi
EchoV "OK      NMINCLUDE=$NMINCLUDE"

# Make sure that the SysToolsLib global include directory is accessible
EchoV "Making sure that the SysToolsLib global include directory is accessible"
CPATH=$STINCLUDE cc -o /dev/null -xc - >&6 2>&1 <<EOF
#include "stversion.h"
int main(int argc, char *argv[]) {return 0;}
EOF
if [ $? -ne 0 ] ; then # It's not accessible
  if [ -r ../include/stversion.h ] ; then
    STINCLUDE=$(pushd ../include >/dev/null; pwd; popd >/dev/null)
  else
    >&2 echo "Error: Please set STINCLUDE with the pathname of SysToolsLib's global include directory"
    exit 1
  fi
fi
EchoV "OK      STINCLUDE=$STINCLUDE"

# Make sure that the SysLib include directory is accessible
EchoV "Making sure that the SysLib library is accessible"
CPATH=$SYSLIB cc -o /dev/null -xc - >&6 2>&1 <<EOF
#include "SysLib.h"
int main(int argc, char *argv[]) {return 0;}
EOF
if [ $? -ne 0 ] ; then # It's not accessible
  if [ -r ../SysLib/SysLib.h ] ; then
    SYSLIB=$(pushd ../SysLib >/dev/null; pwd; popd >/dev/null)
  else
    >&2 echo "Error: Please set SYSLIB with the pathname of the SysLib library base directory"
    exit 1
  fi
fi
EchoV "OK      SYSLIB=$SYSLIB"

# Recreate the config.h file
MAKE=$(which gmake || which make)
EchoV "MAKE = $MAKE"
CONFIG_H=$($MAKE config_dir)/config.h
EchoV "config.h = $CONFIG_H"
rm $CONFIG_H 2>/dev/null

# Define a macro for flagging unused arguments, and avoid a warnings
echo "#define UNUSED_ARG(arg_name) (void)arg_name" >>$CONFIG_H

EchoN Configuration done successfully.
